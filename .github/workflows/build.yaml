name: "Build and push docker image"
on:
  push:
jobs:
  build-push-docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up netrc attic login
      id: setup-netrc
      run: |
        NETRC_DIR="$(mktemp -d)"
        echo "machine attic.ialistannen.de" > "$NETRC_DIR/attic-netrc"
        echo "password ${{ secrets.ATTIC_TOKEN }}" >> "$NETRC_DIR/attic-netrc"
        echo "netrc-dir=$NETRC_DIR" >> $GITHUB_OUTPUT
    - uses: cachix/install-nix-action@v31
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}
        extra_nix_config: |
          substituters = https://attic.ialistannen.de/compiler https://cache.nixos.org
          trusted-public-keys = compiler:QZch5vn1csz/rveXoPmU04xGuvkRFVNWIFjDUiYWkgQ= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
          netrc-file = ${{ steps.setup-netrc.outputs.netrc-dir }}/attic-netrc
    - name: Set up attic
      run: |
        NIXPKGS_OVERRIDE="github:NixOS/nixpkgs/$(jq -r '.nodes.nixpkgs.locked.rev' flake.lock)"
        nix profile install --override-input nixpkgs "$NIXPKGS_OVERRIDE" github:zhaofengli/attic $NIXPKGS_OVERRIDE#nix-fast-build
        attic login mine https://attic.ialistannen.de ${{ secrets.ATTIC_TOKEN }}

        # Save original store paths
        nix path-info --all --json | jq 'keys' > /tmp/original-paths.json

        # Cache attic itself
        attic push compiler $(which attic)
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: compiler.vads.kastel.kit.edu
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - name: Build frontend
      run: |
        # Best effort upload parallel to build
        attic watch-store compiler &
        nix-fast-build --no-nom --flake ".#packages.$(nix eval --raw --impure --expr builtins.currentSystem).docker.frontend"
        mv result- result
        sha256sum result
    - name: Load frontend docker image
      run: |
        echo "IMG_FRONTEND=$(docker load --quiet < result | sed -E 's/.+?: (.+)/\1/g')" >> $GITHUB_ENV
    - name: Build backend
      run: |
        # Best effort upload parallel to build
        attic watch-store compiler &
        nix-fast-build --no-nom --flake ".#packages.$(nix eval --raw --impure --expr builtins.currentSystem).docker.backend"
        mv result- result
        sha256sum result
    - name: Load backend docker image
      run: |
        echo "IMG_BACKEND=$(docker load --quiet < result | sed -E 's/.+?: (.+)/\1/g')" >> $GITHUB_ENV
    - name: Push docker images
      run: |
        docker tag "$IMG_FRONTEND" compiler.vads.kastel.kit.edu/crow-frontend:latest
        docker tag "$IMG_FRONTEND" compiler.vads.kastel.kit.edu/crow-frontend:$GITHUB_SHA
        docker rmi "$IMG_FRONTEND"
        docker push --all-tags compiler.vads.kastel.kit.edu/crow-frontend

        docker tag "$IMG_BACKEND" compiler.vads.kastel.kit.edu/crow-backend:latest
        docker tag "$IMG_BACKEND" compiler.vads.kastel.kit.edu/crow-backend:$GITHUB_SHA
        docker rmi "$IMG_BACKEND"
        docker push --all-tags compiler.vads.kastel.kit.edu/crow-backend
    - name: Upload store to attic
      if: always()
      run: |
        # Save new store paths
        nix path-info --all --json | jq 'keys' > /tmp/new-paths.json

        jq -r -s '(.[1] - .[0]) | .[]' /tmp/original-paths.json /tmp/new-paths.json | attic push compiler --stdin
